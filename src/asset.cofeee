mongo = require 'mongodb'
BSON = mongo.BSONPure

Asset = {}

class Asset
  constructor: (opts, db) ->
    @Asset = this
    @db = db
    @host = opts.asset_host
    @port = opts.asset_port
    @asset_servers = opts.asset_servers
    
  url: (asset_id, file_name, callback) =>
    @_findAsset asset_id, (record) =>
      return callback("http://google.com") unless record
      storage = @asset_servers[record["storage"]] || @asset_servers["cdn"]
      unless record["storage"]?
        url = "http://#{storage['host']}:#{storage['port']}/uploads/asset/image/#{asset_id}/#{file_name}"
      else
        url = "http://#{storage['host']}:#{storage['port']}/uploads/#{asset_id}/#{file_name}"
      callback(url)
  
  _findAsset: (asset_id, callback) ->
    o_id = new BSON.ObjectID asset_id
    @db.collection "assets", (dbErr, collection) => 
      collection.find({_id: o_id}).nextObject (err, result) =>
        callback(result) unless err?
          
exports.Asset = Asset