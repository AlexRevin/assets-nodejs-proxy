mongo = require 'mongodb'
BSON = mongo.BSONPure

Asset = {}

class Asset
  constructor: (opts) ->
    @Asset = this
    @host = opts.asset_host
    @port = opts.asset_port
    @user_name = opts.db_login
    @password = opts.db_pass
    @server_ip = opts.db_server
    @collection = opts.db_collection
    @asset_servers = opts.asset_servers
    
  url: (asset_id, file_name, old, callback) =>
    @_findAsset asset_id, (record) =>
      storage = @asset_servers[record["storage"]] || @asset_servers["cdn"]
      url = "http://#{storage['host']}:#{storage['port']}/uploads/#{asset_id}/#{file_name}"
      callback(url)
  
  _findAsset: (asset_id, callback) ->
    o_id = new BSON.ObjectID asset_id
    server = new mongo.Server @server_ip, 27017, {}
    client = new mongo.Db @collection, server, {safe: true}
    client.authenticate @user_name, @password, ->
      client.open (err, database) =>
        client.collection "assets", (dbErr, collection) => 
          collection.find({_id: o_id}).nextObject (err, result) =>
            client.close()
            callback(result) unless err?
          
exports.Asset = Asset