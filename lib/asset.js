// Generated by CoffeeScript 1.4.0
(function() {
  var Asset, BSON, mongo,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  mongo = require('mongodb');

  BSON = mongo.BSONPure;

  Asset = {};

  Asset = (function() {

    function Asset(opts) {
      this.url = __bind(this.url, this);
      this.Asset = this;
      this.host = opts.asset_host;
      this.port = opts.asset_port;
      this.server_ip = opts.db_server;
      this.collection = opts.db_collection;
      this.asset_servers = opts.asset_servers;
    }

    Asset.prototype.url = function(asset_id, file_name, old, callback) {
      var _this = this;
      return this._findAsset(asset_id, function(record) {
        var storage, url;
        storage = _this.asset_servers[record["storage"]] || _this.asset_servers["cdn"];
        url = "http://" + storage['host'] + ":" + storage['port'] + "/uploads/" + asset_id + "/" + file_name;
        return callback(url);
      });
    };

    Asset.prototype._findAsset = function(asset_id, callback) {
      var client, o_id, server,
        _this = this;
      o_id = new BSON.ObjectID(asset_id);
      server = new mongo.Server(this.server_ip, 27017, {});
      client = new mongo.Db(this.collection, server, {
        safe: true
      });
      return client.open(function(err, database) {
        return client.collection("assets", function(dbErr, collection) {
          return collection.find({
            _id: o_id
          }).nextObject(function(err, result) {
            client.close();
            if (err == null) {
              return callback(result);
            }
          });
        });
      });
    };

    return Asset;

  })();

  exports.Asset = Asset;

}).call(this);
